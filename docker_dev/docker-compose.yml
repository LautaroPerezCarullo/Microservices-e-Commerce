services:
    e_commerce_app:
        image: e_commerce_dev:v1.0.0
        container_name: ecommerce_app_dev
        ports:
            - 5000:5000
        networks:
            - ecommerce_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ecommerce.rule=Host(`app.ecommerce.local`)"
            - "traefik.http.services.ecommerce.loadbalancer.server.port=5000"
            - "traefik.http.routers.ecommerce.tls=true"
            - "traefik.docker.network=ecommerce_network"
        extra_hosts:
            - "catalog.ecommerce.local:172.20.0.1"
            - "purchase.ecommerce.local:172.20.0.1"
            - "payment.ecommerce.local:172.20.0.1"
            - "stock.ecommerce.local:172.20.0.1"
        environment:
            - FLASK_CONTEXT=${FLASK_CONTEXT}
            - CATALOG_SERVICE_URL=${CATALOG_SERVICE_URL}
            - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
            - PURCHASE_SERVICE_URL=${PURCHASE_SERVICE_URL}
            - STOCK_SERVICE_URL=${STOCK_SERVICE_URL}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_DB=${REDIS_DB}

    mscatalog:
        image: ms_catalog_dev:v1.0.0
        container_name: mscatalog_dev
        depends_on:
            - e_commerce_app
        ports:
            - 5001:5000
        networks:
            - ecommerce_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.catalog.rule=Host(`catalog.ecommerce.local`)"
            - "traefik.http.services.catalog.loadbalancer.server.port=5000"
            - "traefik.http.routers.catalog.tls=true"
            - "traefik.docker.network=ecommerce_network"
            # Circuit Breakers
            - "traefik.http.middlewares.catalog.circuitbreaker.expression=LatencyAtQuantileMS(75.0) > 100"
            - "traefik.http.middlewares.catalog.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.25"
            - "traefik.http.middlewares.catalog.circuitbreaker.expression=NetworkErrorRatio() > 0.25"
        environment:
            - FLASK_CONTEXT=${FLASK_CONTEXT}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_DB=${REDIS_DB}
            - TEST_DB_URI=${TEST_DB_URI}
            - DEV_DB_URI=${DEV_DB_URI}
            - PROD_DB_URI=${PROD_DB_URI}
    mspurchase:
        image: ms_purchase_dev:v1.0.0
        container_name: mspurchase_dev
        depends_on:
            - e_commerce_app
        ports:
            - 5002:5000
        networks:
            - ecommerce_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.purchase.rule=Host(`purchase.ecommerce.local`)"
            - "traefik.http.routers.purchase.tls=true"
            - "traefik.http.services.purchase.loadbalancer.server.port=5000"
            - "traefik.docker.network=ecommerce_network"
            # Circuit Breakers
            - "traefik.http.middlewares.purchase.circuitbreaker.expression=LatencyAtQuantileMS(75.0) > 150"
            - "traefik.http.middlewares.purchase.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.25"
            - "traefik.http.middlewares.purchase.circuitbreaker.expression=NetworkErrorRatio() > 0.25"
        environment:
            - FLASK_CONTEXT=${FLASK_CONTEXT}
            - TEST_DB_URI=${TEST_DB_URI}
            - DEV_DB_URI=${DEV_DB_URI}
            - PROD_DB_URI=${PROD_DB_URI}
    mspayment:
        image: ms_payment_dev:v1.0.0
        container_name: mspayment_dev
        depends_on:
            - e_commerce_app
        ports:
            - 5003:5000
        networks:
            - ecommerce_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.payment.rule=Host(`payment.ecommerce.local`)"
            - "traefik.http.routers.payment.tls=true"
            - "traefik.http.services.payment.loadbalancer.server.port=5000"
            - "traefik.docker.network=ecommerce_network"
            # Circuit Breakers
            - "traefik.http.middlewares.payment.circuitbreaker.expression=LatencyAtQuantileMS(75.0) > 150"
            - "traefik.http.middlewares.payment.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.25"
            - "traefik.http.middlewares.payment.circuitbreaker.expression=NetworkErrorRatio() > 0.25"
        environment:
            - FLASK_CONTEXT=${FLASK_CONTEXT}
            - TEST_DB_URI=${TEST_DB_URI}
            - DEV_DB_URI=${DEV_DB_URI}
            - PROD_DB_URI=${PROD_DB_URI}
    msstock:
        image: ms_stock_dev:v1.0.0
        container_name: msstock_dev
        depends_on:
            - e_commerce_app
        ports:
            - 5004:5000
        networks:
            - ecommerce_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.stock.rule=Host(`stock.ecommerce.local`)"
            - "traefik.http.routers.stock.tls=true"
            - "traefik.http.services.stock.loadbalancer.server.port=5000"
            - "traefik.docker.network=ecommerce_network"
            # Circuit Breakers
            - "traefik.http.middlewares.stock.circuitbreaker.expression=LatencyAtQuantileMS(75.0) > 150"
            - "traefik.http.middlewares.stock.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.25"
            - "traefik.http.middlewares.stock.circuitbreaker.expression=NetworkErrorRatio() > 0.25"
        environment:
            - FLASK_CONTEXT=${FLASK_CONTEXT}
            - TEST_DB_URI=${TEST_DB_URI}
            - DEV_DB_URI=${DEV_DB_URI}
            - PROD_DB_URI=${PROD_DB_URI}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_DB=${REDIS_DB}
networks:
    ecommerce_network:
        external: true
